---
import { Container, styled } from "@styled-system/jsx";

import { getCollection, getEntry, type CollectionEntry } from "astro:content";

import BaseLayout from "../layouts/BaseLayout.astro";
import BlogList from "../components/BlogList";
import Bio from "../components/Bio";
import Footer from "../components/Footer";

import { SITE_TITLE, SITE_DESCRIPTION } from "../constants";

const getDescription = async (
  post: CollectionEntry<"blog" | "scrap">,
): Promise<string> => {
  if (post.collection === "blog" && post.data.description) {
    return post.data.description;
  }
  const entry = await getEntry(post.collection, post.slug);
  const { remarkPluginFrontmatter } = await entry.render();
  return remarkPluginFrontmatter.excerpt;
};

const blogCollection = await getCollection("blog");
const scrapCollection = await getCollection("scrap");

const blogPosts = await Promise.all(
  blogCollection.map(async (post) => ({
    url: `/${post.collection}/${post.slug}`,
    title: post.data.title,
    description: await getDescription(post),
    date: post.data.date,
    category: post.data.category,
  })),
);
const scrapPosts = await Promise.all(
  scrapCollection.map(async (post) => ({
    url: `/${post.collection}/${post.slug}`,
    title: post.data.title,
    description: await getDescription(post),
    date: new Date(post.slug),
    category: post.data.category,
  })),
);

const sortedPosts = [...blogPosts, ...scrapPosts].sort(
  (a, b) => b.date.valueOf() - a.date.valueOf(),
);
---

<BaseLayout
  title={SITE_TITLE}
  description={SITE_DESCRIPTION}
  faviconType="t28.dev"
>
  <styled.header marginY="12">
    <Container>
      <styled.h1
        color="var(--color-primary)"
        fontSize="var(--fontSize-7)"
        margin="0"
      >
        <a href="/">{SITE_TITLE}</a>
      </styled.h1>
    </Container>
  </styled.header>
  <Container>
    <Bio />
  </Container>
  <Container>
    <BlogList posts={sortedPosts} />
  </Container>
  <Footer />
</BaseLayout>
