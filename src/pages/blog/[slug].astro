---
import { css } from "@styled-system/css";
import { Container, styled } from "@styled-system/jsx";
import styles from "../../styles/blogPostContent.module.scss";

import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost";
import Footer from "../../components/Footer";
import BlogPostSideMenu from "../../components/BlogPostSideMenu";

import { headingToTocItems } from "../../helpers/utils";

import { SITE_TITLE } from "../../constants";

export const getStaticPaths = async () => {
  const allBlogPosts = await getCollection("blog");
  return allBlogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
};

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();

const title = `${post.data.title} | ${SITE_TITLE}`;
const description = post.data.description ?? remarkPluginFrontmatter.excerpt;
const ogpImageUrl = new URL(`/blog/${post.slug}/ogp.png`, Astro.url).href;

const blogPostLeft = css({
  width: {
    base: "full",
    md: "[calc(100% - var(--sizes-xs) - var(--sizes-4))]",
  },
});

const blogPostRight = css({
  width: "xs",
  mdDown: {
    display: "none",
  },
});
---

<BaseLayout
  title={title}
  description={description}
  faviconType="t28.dev"
  ogpImageUrl={ogpImageUrl}
>
  <styled.header marginY="12">
    <Container>
      <styled.a
        href="/"
        fontWeight="bold"
        textDecoration="none"
        fontSize="var(--fontSize-4)"
      >
        {SITE_TITLE}
      </styled.a>
    </Container>
  </styled.header>
  <Container display="flex" justifyContent="space-between">
    <div class={blogPostLeft}>
      <BlogPost
        title={post.data.title}
        date={post.data.date}
        category={post.data.category}
      >
        <div class={styles.blogPostContent}>
          <Content />
        </div>
      </BlogPost>
    </div>
    <div class={blogPostRight}>
      <BlogPostSideMenu client:visible tocItems={headingToTocItems(headings)} />
    </div>
  </Container>
</BaseLayout>
<Footer />
