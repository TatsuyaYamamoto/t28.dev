---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Container from "../../components/Container";
import BlogPost from "../../components/BlogPost";
import Footer from "../../components/Footer";
import BlogPostSideMenu from "../../components/BlogPostSideMenu";

import { headingToTocItems } from "../../helpers/utils";

import { SITE_TITLE } from "../../constants";

export const getStaticPaths = async () => {
  const allBlogPosts = await getCollection("blog");
  return allBlogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
};

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();

const title = `${post.data.title} | ${SITE_TITLE}`;
const description = post.data.description ?? remarkPluginFrontmatter.excerpt;
const ogpImageUrl = new URL(`/blog/${post.slug}.ogp.png`, Astro.url).href;
---

<BaseLayout
  title={title}
  description={description}
  faviconType="t28.dev"
  ogpImageUrl={ogpImageUrl}
>
  <header class="my-12">
    <Container>
      <a href="/" class="text-(length:--fontSize-4) font-bold no-underline">
        {SITE_TITLE}
      </a>
    </Container>
  </header>
  <Container className="flex justify-between">
    <div class="w-full md:w-[calc(100%-var(--container-xs)-var(--spacing)*4)]">
      <BlogPost
        title={post.data.title}
        date={post.data.date}
        category={post.data.category}
      >
        <div class="blog-post-content">
          <Content />
        </div>
      </BlogPost>
    </div>
    <div class="w-xs max-md:hidden">
      <BlogPostSideMenu client:visible tocItems={headingToTocItems(headings)} />
    </div>
  </Container>
</BaseLayout>
<Footer />
